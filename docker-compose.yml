version: "3.8"

services:
  # Open Web UI
  openwebui:
    container_name: openwebui
    hostname: openwebui
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ${OLLAMA_PATH}/data:/app/backend/data
      - ${OLLAMA_PATH}/root:/root/.ollama
    environment:
      WEBUI_NAME: ${WEBUI_NAME}
      WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY}
      # USE_CUDA_DOCKER: ${USE_CUDA_DOCKER}
      PORT: ${PORT}
      # Postgres
      DATABASE_URL: ${DATABASE_URL}/${POSTGRES_DATABASE}
      # ChromaDB
      CHROMA_HTTP_HOST: chroma-server
      CHROMA_HTTP_PORT: 8000
      CHROMA_DATABASE: default_database
      # Image Generation
      ENABLE_IMAGE_GENERATION: ${ENABLE_IMAGE_GENERATION}
      IMAGE_GENERATION_ENGINE: ${IMAGE_GENERATION_ENGINE}
      IMAGES_OPENAI_API_KEY: ${IMAGES_OPENAI_API_KEY}
      # Support Nodes
      USE_OLLAMA_DOCKER: ${USE_OLLAMA_DOCKER}
      OLLAMA_BASE_URLS: ${OLLAMA_BASE_URLS}
      OPENAI_API_BASE_URLS: ${OPENAI_API_BASE_URLS}
      OPENAI_API_KEYS: ${OPENAI_API_KEYS}
      # RAG
      RAG_EMBEDDING_ENGINE: ${RAG_EMBEDDING_ENGINE}
      ENABLE_RAG_HYBRID_SEARCH: ${ENABLE_RAG_HYBRID_SEARCH}
      PDF_EXTRACT_IMAGES: ${RAG_EMBEDDING_MODEL}
      RAG_EMBEDDING_MODEL: ${RAG_EMBEDDING_MODEL}
      CHUNK_SIZE: ${CHUNK_SIZE}
      CHUNK_OVERLAP: ${CHUNK_OVERLAP}
      RAG_TOP_K: ${RAG_TOP_K}
      RAG_RELEVANCE_THRESHOLD: ${RAG_RELEVANCE_THRESHOLD}
      # Speech to Text
      WHISPER_MODEL: ${WHISPER_MODEL}
      # Text to Speech
      AUDIO_OPENAI_API_KEY: ${AUDIO_OPENAI_API_KEY}
    depends_on:
      ollama-postgres:
        condition: service_healthy
        restart: true
      chroma-server:
        condition: service_healthy
        restart: true
    networks:
      - cloud-net
      - ollama


  # Support Nodes
  ollama-node-one:
    container_name: ollama-node-one
    image: ghcr.io/open-webui/open-webui:main
    environment:
      NODE_ID: node-one
    networks:
      - ollama


  ollama-node-two:
    container_name: ollama-node-two
    image: ghcr.io/open-webui/open-webui:main
    environment:
      NODE_ID: node-two
    networks:
      - ollama


# Databases
  chroma-server:
    image: ghcr.io/chroma-core/chroma:latest
    hostname: chroma-server
    environment:
      - IS_PERSISTENT=TRUE
    volumes:
      - ${CHROMA_PATH}:/chroma/chroma/
    ports:
      - 8881:8000
    networks:
      - ollama
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat" ]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama-postgres:
    container_name: ollama-postgres
    hostname: ollama-postgres
    image: postgres:16
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ${POSTGRES_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ollama

  # Redis
  redis:
    image: redis:latest
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - ${REDIS_PATH}:/data
    networks:
      - ollama


  # LiteLLM
  lite-llm:
    image: ghcr.io/berriai/litellm:main-latest
    hostname: lite-llm
    ports:
      - 4000:4000
    volumes:
      - ${LITELLM_PATH}/config.yml:/app/config.yaml
    environment:
      DATABASE_URL: ${DATABASE_URL}/litellmdb
      LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
      OPENAI_API_KEY: ${LITELLM_OPENAI_KEY}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
    depends_on:
      - ollama-postgres
      - redis
    networks:
      - ollama



networks:
  cloud-net:
    external: true

  ollama:
    external: true


